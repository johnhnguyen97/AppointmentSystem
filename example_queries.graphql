# Step 1: Create user
mutation CreateUser {
  createUser(input: {
    username: "johndoe"
    email: "john@example.com"
    password: "Password123!"
    first_name: "John"
    last_name: "Doe"
  }) {
    sequential_id
    username
    client_profile {
      id
      service
    }
  }
}

# Step 2: Login
mutation Login {
  login(input: {
    username: "johndoe"
    password: "Password123!"
  }) {
    token
    user {
      sequential_id
      username
      client_profile {
        id
        service
      }
    }
  }
}

# Step 3: Add token to HTTP HEADERS
# {
#   "Authorization": "Bearer your-token-here"
# }

# Step 4: Create client
mutation CreateClient {
  createClient(input: {
    phone: "123-456-7890"
    service: HAIRCUT  # No underscores in enum values
    notes: "First time client"
  }) {
    id
    phone
    service
    notes
    user {
      sequential_id
      username
    }
  }
}

# Query user with client profile
query GetUserWithClient {
  user(sequential_id: 1) {
    username
    client_profile {  # Now included in user type
      id
      phone
      service
      notes
    }
  }
}

# Available service types (no underscores):
# HAIRCUT
# MANICURE
# PEDICURE
# FACIAL
# MASSAGE
# HAIRCOLOR
# HAIRSTYLE
# MAKEUP
# WAXING
# OTHER
