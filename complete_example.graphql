# Step 1: Create a user (if you don't have one)
mutation CreateUser {
  createUser(input: {
    username: "johndoe"
    email: "john@example.com"
    password: "Password123!"
    first_name: "John"
    last_name: "Doe"
  }) {
    id
    sequential_id
    username
  }
}

# Step 2: Login to get token
mutation Login {
  login(input: {
    username: "johndoe"
    password: "Password123!"
  }) {
    token
    user {
      sequential_id
      username
    }
  }
}

# Step 3: Add token to HTTP HEADERS at bottom of playground
# {
#   "Authorization": "Bearer your-token-here"
# }

# Step 4: Create client with service enum
mutation CreateClient {
  createClient(input: {
    phone: "123-456-7890"
    service: HAIR_CUT  # Must be enum value, no quotes
    notes: "First time client"
  }) {
    id
    phone
    service
    notes
    user {
      sequential_id  # Human-readable ID
      username
    }
  }
}

# Step 5: Query your client info
query GetMyClient {
  user(sequential_id: 1) {  # Use your sequential_id from login
    username
    client_profile {
      id
      phone
      service
      notes
    }
  }
}

# Example with different service type
mutation CreateMassageClient {
  createClient(input: {
    phone: "555-123-4567"
    service: MASSAGE  # Different enum value
    notes: "Prefers deep tissue"
  }) {
    id
    service
    notes
    user {
      sequential_id
      username
    }
  }
}

# Available service types (use exactly as shown, no quotes):
# HAIR_CUT
# MANICURE
# PEDICURE
# FACIAL
# MASSAGE
# HAIR_COLOR
# HAIR_STYLE
# MAKEUP
# WAXING
# OTHER
